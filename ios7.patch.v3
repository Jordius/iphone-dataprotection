diff -r 4222556965e9 python_scripts/keychain/keychain4.py
--- a/python_scripts/keychain/keychain4.py	Sun Aug 18 13:18:15 2013 +0200
+++ b/python_scripts/keychain/keychain4.py	Sat Oct 12 22:28:46 2013 -0700
@@ -1,5 +1,6 @@
 from crypto.aes import AESdecryptCBC
 import struct
+from pyasn1.codec.der.decoder import decode as der_decode
 
 """
     iOS 4 keychain-2.db data column format
@@ -45,7 +46,10 @@
             if not dict:
                 return {"clas": clas, "rowid": row["rowid"]}
             if dict.has_key("v_Data"):
-                dict["data"] = dict["v_Data"].data
+                try:
+                  dict["data"] = dict["v_Data"].data
+                except AttributeError:
+                  dict["data"] = dict["v_Data"]
             else:
                 dict["data"] = ""
             dict["rowid"] = row["rowid"]
@@ -77,6 +81,10 @@
             l = struct.unpack("<L",blob[8:12])[0]
             wrappedkey = blob[12:12+l]
             encrypted_data = blob[12+l:-16]
+        elif version == 3:
+          l = struct.unpack("<L",blob[8:12])[0]
+          wrappedkey = blob[12:12+l]
+          encrypted_data = blob[12+l:-16]
         else:
             raise Exception("unknown keychain verson ", version)
             return
@@ -90,3 +98,14 @@
         elif version == 2:
             binaryplist = gcm_decrypt(unwrappedkey, "", encrypted_data, "", blob[-16:])
             return BPlistReader(binaryplist).parse()
+        elif version == 3:
+            der = gcm_decrypt(unwrappedkey, "", encrypted_data, "", blob[-16:])
+            stuff = der_decode(der)[0]
+            rval = {}
+            for k,v in stuff:
+              k = str(k)
+              # NB - this is binary and may not be valid UTF8 data
+              v = str(v)
+              rval[k] = v
+            return rval
+            
